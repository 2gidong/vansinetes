---
- name: Install packages to install docker
  become: yes
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add Docker APT GPG key
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Get lsb_release
  command: lsb_release -cs
  register: lsb_release

- set_fact:
    lsb_release: "{{ lsb_release.stdout }}"

- name: Add Docker APT repository
  become: yes
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ lsb_release }} stable
    state: present
    filename: docker

- name: Install docker engine latest
  when: version == 'latest'
  become: yes
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes
  notify: docker service start

- name: List the docker-ce versions available in repo
  when: version != 'latest'
  shell: apt-cache madison docker-ce
  register: result

- name: Get the exact docker-ce version name in apt repo
  when:
    - version != 'latest'
    - version in item
  set_fact:
    apt_docker_ce_version: "{{ item.split('|')[1] | trim }}"
  with_items: "{{ result.stdout_lines }}"


- name: List the docker-ce-cli versions available in repo
  when: version != 'latest'
  shell: apt-cache madison docker-ce-cli
  register: result

- name: Get the exact docker-ce-cli version name in apt repo
  when:
    - version != 'latest'
    - version in item
  set_fact:
    apt_docker_ce_cli_version: "{{ item.split('|')[1] | trim }}"
  with_items: "{{ result.stdout_lines }}"

- name: Install docker engine specific version
  when:
    - version != 'latest'
    - item.install
  become: yes
  apt:
    name: "{{ item.package }}"
    state: present
    update_cache: yes
  with_items:
    - { install: "{{ apt_docker_ce_version is defined }}", package: "docker-ce={{ apt_docker_ce_version | default(omit) }}" }
    - { install: "{{ apt_docker_ce_cli_version is defined }}", package: "docker-ce-cli={{ apt_docker_ce_cli_version | default(omit) }}" }
    - { install: true, package: containerd.io }
  notify: docker service start